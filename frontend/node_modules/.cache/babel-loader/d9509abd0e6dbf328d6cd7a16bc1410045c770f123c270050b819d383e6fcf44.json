{"ast":null,"code":"import{LOGIN_ENDPOINT,REFRESH_ENDPOINT,REGISTER_ENDPOINT}from'./auth.constants';import request from'./api.request';class AuthService{constructor(){this.login=this.login.bind(this);}async login(username,password){try{const response=await request({url:LOGIN_ENDPOINT,method:'POST',data:{username,password}});if(response.data.access){return this.setToken(response);}}catch(error){var _error$response;console.error('Login failed:',((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);return null;}}logout(){localStorage.removeItem('user');}async register(_ref){let{username,email,password,firstName,lastName}=_ref;try{const response=await request({url:REGISTER_ENDPOINT,method:'POST',data:{username,email,password,first_name:firstName,last_name:lastName}});// Registration successful, now login\nawait this.login(username,password);return response;}catch(error){console.error('Registration error:',error);return error.response;}}setToken(response){localStorage.setItem('user',JSON.stringify(response.data));return response.data;}async refreshToken(){try{const user=JSON.parse(localStorage.getItem('user'));if(user.refresh){const response=await request({url:REFRESH_ENDPOINT,method:'POST',data:{refresh:user.refresh}});return response.data;}}catch(error){return error.response;}}}export default new AuthService();","map":{"version":3,"names":["LOGIN_ENDPOINT","REFRESH_ENDPOINT","REGISTER_ENDPOINT","request","AuthService","constructor","login","bind","username","password","response","url","method","data","access","setToken","error","_error$response","console","message","logout","localStorage","removeItem","register","_ref","email","firstName","lastName","first_name","last_name","setItem","JSON","stringify","refreshToken","user","parse","getItem","refresh"],"sources":["/workspace/golf-app-frontend/frontend/src/services/auth.service.js"],"sourcesContent":["import {\n  LOGIN_ENDPOINT,\n  REFRESH_ENDPOINT,\n  REGISTER_ENDPOINT,\n} from './auth.constants';\n\nimport request from './api.request';\n\nclass AuthService {\n  constructor() {\n    this.login = this.login.bind(this);\n  }\n\n  async login(username, password) {\n    try {\n      const response = await request({\n        url: LOGIN_ENDPOINT,\n        method: 'POST',\n        data: {\n          username,\n          password,\n        },\n      });\n\n      if (response.data.access) {\n        return this.setToken(response);\n      }\n    } catch (error) {\n      console.error('Login failed:', error.response?.data || error.message);\n      return null;\n    }\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  async register({\n    username,\n    email,\n    password,\n    firstName,\n    lastName,\n  }) {\n    try {\n      const response = await request({\n        url: REGISTER_ENDPOINT,\n        method: 'POST',\n        data: {\n          username,\n          email,\n          password,\n          first_name: firstName,\n          last_name: lastName,\n        },\n      });\n\n      // Registration successful, now login\n      await this.login(username, password);\n      return response;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return error.response;\n    }\n  } setToken(response) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n    return response.data;\n  }\n\n  async refreshToken() {\n    try {\n      const user = JSON.parse(localStorage.getItem('user'));\n\n      if (user.refresh) {\n        const response = await request({\n          url: REFRESH_ENDPOINT,\n          method: 'POST',\n          data: {\n            refresh: user.refresh,\n          },\n        });\n\n        return response.data;\n      }\n    } catch (error) {\n      return error.response;\n    }\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OACEA,cAAc,CACdC,gBAAgB,CAChBC,iBAAiB,KACZ,kBAAkB,CAEzB,MAAO,CAAAC,OAAO,KAAM,eAAe,CAEnC,KAAM,CAAAC,WAAY,CAChBC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,KAAK,CAAG,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,IAAI,CAAC,CACpC,CAEA,KAAM,CAAAD,KAAKA,CAACE,QAAQ,CAAEC,QAAQ,CAAE,CAC9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,OAAO,CAAC,CAC7BQ,GAAG,CAAEX,cAAc,CACnBY,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,CACJL,QAAQ,CACRC,QACF,CACF,CAAC,CAAC,CAEF,GAAIC,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAE,CACxB,MAAO,KAAI,CAACC,QAAQ,CAACL,QAAQ,CAAC,CAChC,CACF,CAAE,MAAOM,KAAK,CAAE,KAAAC,eAAA,CACdC,OAAO,CAACF,KAAK,CAAC,eAAe,CAAE,EAAAC,eAAA,CAAAD,KAAK,CAACN,QAAQ,UAAAO,eAAA,iBAAdA,eAAA,CAAgBJ,IAAI,GAAIG,KAAK,CAACG,OAAO,CAAC,CACrE,MAAO,KAAI,CACb,CACF,CAEAC,MAAMA,CAAA,CAAG,CACPC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CACjC,CAEA,KAAM,CAAAC,QAAQA,CAAAC,IAAA,CAMX,IANY,CACbhB,QAAQ,CACRiB,KAAK,CACLhB,QAAQ,CACRiB,SAAS,CACTC,QACF,CAAC,CAAAH,IAAA,CACC,GAAI,CACF,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAP,OAAO,CAAC,CAC7BQ,GAAG,CAAET,iBAAiB,CACtBU,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,CACJL,QAAQ,CACRiB,KAAK,CACLhB,QAAQ,CACRmB,UAAU,CAAEF,SAAS,CACrBG,SAAS,CAAEF,QACb,CACF,CAAC,CAAC,CAEF;AACA,KAAM,KAAI,CAACrB,KAAK,CAACE,QAAQ,CAAEC,QAAQ,CAAC,CACpC,MAAO,CAAAC,QAAQ,CACjB,CAAE,MAAOM,KAAK,CAAE,CACdE,OAAO,CAACF,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC3C,MAAO,CAAAA,KAAK,CAACN,QAAQ,CACvB,CACF,CAAEK,QAAQA,CAACL,QAAQ,CAAE,CACnBW,YAAY,CAACS,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACtB,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC3D,MAAO,CAAAH,QAAQ,CAACG,IAAI,CACtB,CAEA,KAAM,CAAAoB,YAAYA,CAAA,CAAG,CACnB,GAAI,CACF,KAAM,CAAAC,IAAI,CAAGH,IAAI,CAACI,KAAK,CAACd,YAAY,CAACe,OAAO,CAAC,MAAM,CAAC,CAAC,CAErD,GAAIF,IAAI,CAACG,OAAO,CAAE,CAChB,KAAM,CAAA3B,QAAQ,CAAG,KAAM,CAAAP,OAAO,CAAC,CAC7BQ,GAAG,CAAEV,gBAAgB,CACrBW,MAAM,CAAE,MAAM,CACdC,IAAI,CAAE,CACJwB,OAAO,CAAEH,IAAI,CAACG,OAChB,CACF,CAAC,CAAC,CAEF,MAAO,CAAA3B,QAAQ,CAACG,IAAI,CACtB,CACF,CAAE,MAAOG,KAAK,CAAE,CACd,MAAO,CAAAA,KAAK,CAACN,QAAQ,CACvB,CACF,CACF,CAEA,cAAe,IAAI,CAAAN,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}